name: Notify

on:
  workflow_run:
    workflows: [ "pages-build-deployment" ]
    types:
      - completed
jobs:
  notify:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Find the latest CI run
        uses: actions/github-script@v6
        id: find_ci_run
        with:
          script: |
            const runs = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 50,
            });
            const ciRuns = runs.data.workflow_runs
              .filter(run => run.name === "CI" && run.status === "completed" && (run.conclusion === "success" || run.conclusion === "failure"))
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            const latestCiRun = ciRuns[0];
            const runNumber = latestCiRun.run_number;
            core.setOutput("run_number", runNumber);
            core.setOutput("run_id", latestCiRun.id);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Send Telegram Notification
#        run: |
#          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
#          REPORT_LINK="https://evgnick.github.io/JenkinsQA_2024_fall2/${{ steps.find_ci_run.outputs.run_number }}/"
#          CI_RUN_LINK="https://github.com/${{ github.repository }}/actions/runs/${{ steps.find_ci_run.outputs.run_id }}"
#
#          ESCAPED_TIMESTAMP=$(echo "$TIMESTAMP" | sed 's|-|\\-|g; s|:|\\:|g; s|\.|\\.|g; s|_|\\_|g; s|/|\\/|g')
#          ESCAPED_REPORT_LINK=$(echo "$REPORT_LINK" | sed 's|-|\\-|g; s|\.|\\.|g; s|_|\\_|g; s|:|\\:|g; s|/|\\/|g')
#          ESCAPED_CI_RUN_LINK=$(echo "$CI_RUN_LINK" | sed 's|-|\\-|g; s|\.|\\.|g; s|_|\\_|g; s|:|\\:|g; s|/|\\/|g')
#
#          MESSAGE="üìù –ù–æ–≤—ã–π –æ—Ç—á–µ—Ç Allure: [–æ—Ç–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç](${ESCAPED_REPORT_LINK})%0AüìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${ESCAPED_TIMESTAMP}%0A‚öôÔ∏è –°–±–æ—Ä–∫–∞: ${{ steps.find_ci_run.outputs.run_number }}%0Aüîó –ó–∞–ø—É—Å–∫: [–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø—É—Å–∫](${ESCAPED_CI_RUN_LINK})"
#
#          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
#            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
#            -d text="${MESSAGE}" \
#            -d parse_mode="MarkdownV2"

      - name: Send Slack Notification
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
          REPORT_LINK="https://evgnick.github.io/JenkinsQA_2024_fall2/${{ steps.find_ci_run.outputs.run_number }}/"
          CI_RUN_LINK="https://github.com/${{ github.repository }}/actions/runs/${{ steps.find_ci_run.outputs.run_id }}"

          MESSAGE="*–ù–æ–≤—ã–π –æ—Ç—á–µ—Ç Allure*\nüìÖ *–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è*: $TIMESTAMP\n‚öôÔ∏è *–°–±–æ—Ä–∫–∞*: ${{ steps.find_ci_run.outputs.run_number }}\nüîó *<$REPORT_LINK|–û—Ç–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç>*\nüîó *<$CI_RUN_LINK|–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø—É—Å–∫>*"

          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"$MESSAGE\"}" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
